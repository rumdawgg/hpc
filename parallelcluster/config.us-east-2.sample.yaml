HeadNode:
  LocalStorage:
    RootVolume:
      Size: 100
      Encrypted: false
      VolumeType: gp3
      Iops: 3000
      Throughput: 250
  CustomActions:
    OnNodeConfigured:
      Args:
        - 03.configure.slurm.acct.headnode.sh
        - 04.configure.slurm.AllOrNothing.headnode.sh
        - 07.configure.slurm.tagging.headnode.sh
        - 40.install.monitoring.headnode.sh
      Script: s3://${S3_BUCKET}/1click-hpc/scripts/post.install.sh
  Iam:
    AdditionalIamPolicies:
      - Policy: arn:aws:iam::aws:policy/ElasticLoadBalancingFullAccess
      - Policy: arn:aws:iam::aws:policy/SecretsManagerReadWrite
      - Policy: arn:aws:iam::aws:policy/CloudWatchFullAccess
      - Policy: arn:aws:iam::aws:policy/AWSPriceListServiceFullAccess
      - Policy: arn:aws:iam::aws:policy/AmazonSSMFullAccess
      - Policy: arn:aws:iam::aws:policy/AWSCloudFormationReadOnlyAccess
    S3Access:
      - BucketName: '*'
        EnableWriteAccess: true
  InstanceType: c5.4xlarge
  Networking:
    AdditionalSecurityGroups:
      - ${ADDITIONAL_SG}
    ElasticIp: true
    SubnetId: ${SUBNET_ID}
  Ssh:
    KeyName: ${KEY_PAIR}
  Imds:
    Secured: false
Image:
  Os: ubuntu2004
DirectoryService:
  DomainName: dc=${DC0},dc=${DC1},dc=${DC2}
  DomainAddr: ldaps://${NLB_PUBLIC_DNS_NAME}
  PasswordSecretArn: ${SECRET_ARN}
  DomainReadOnlyUser: cn=ReadOnlyUser,ou=Users,ou=${OU},dc=${DC0},dc=${DC1},dc=${DC2}
  LdapTlsReqCert: never
Region: ${AWS_REGION_NAME}
Scheduling:
  Scheduler: slurm
  SlurmSettings:
    ScaledownIdletime: 10
  SlurmQueues:
    - Name: compute
      CapacityType: ONDEMAND
      ComputeResources:
        - Name: c6i-8xlarge
          InstanceType: c6i.8xlarge
          MaxCount: 80
          MinCount: 0
      CustomActions:
        OnNodeConfigured:
          Args:
            - 04.configure.disable.anacron.compute.sh
            - 40.install.monitoring.compute.sh
          Script: s3://${S3_BUCKET}/1click-hpc/scripts/post.install.sh
      Iam:
        AdditionalIamPolicies:
          - Policy: arn:aws:iam::aws:policy/ElasticLoadBalancingFullAccess
          - Policy: arn:aws:iam::aws:policy/SecretsManagerReadWrite
          - Policy: arn:aws:iam::aws:policy/CloudWatchFullAccess
          - Policy: arn:aws:iam::aws:policy/AWSPriceListServiceFullAccess
          - Policy: arn:aws:iam::aws:policy/AmazonSSMFullAccess
          - Policy: arn:aws:iam::aws:policy/AWSCloudFormationReadOnlyAccess
          - Policy: arn:aws:iam::aws:policy/service-role/AmazonEC2SpotFleetTaggingRole
        S3Access:
          - BucketName: '*'
            EnableWriteAccess: true
      Networking:
        AdditionalSecurityGroups:
          - ${ADDITIONAL_SG}
        PlacementGroup:
          Enabled: true
        SubnetIds:
          - ${SUBNET_ID}
        AssignPublicIp: ${USE_PUBLIC_IPS}
SharedStorage:
${FSX}
Tags:
  - Key: EnginFrame
    Value: 'true'
  - Key: 1Click-HPC
    Value: 'true'
  - Key: 1Click-HPC-version
    Value: '0.4'